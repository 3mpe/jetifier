#!/bin/bash

MAPPING_DIR=node_modules/jetifier/src
MAPPING_FILE=$MAPPING_DIR/androidx-class-mapping.csv
MAPPING_SED=$MAPPING_DIR/androidx-class-mapping.sed
PROJECT_DIR=node_modules

W=1

for j in "$@"
do
  case $j in
    -w=*|--workers=*)
      W="${j#*=}"
      shift
      ;;
    *)
      # unknown option
      ;;
  esac
done

rm -f $MAPPING_SED
echo "Creating new sed command from $MAPPING_FILE"
while IFS=, read -r from to
do
  echo "s/$from/$to/g;" >> $MAPPING_SED
done <<< "$(cat $MAPPING_FILE)"

# renderscript needs conversion, but is not an official conversion, add it
echo "s/android.support.v8.renderscript/android.renderscript/g;" >> $MAPPING_SED

echo "Command file for sed ready, using $W workers. Searching for files to jetify..."

jetify() {
  echo "jetifying file $1 ($2)"
  sed -i -f $MAPPING_SED $FILE
}

find . -type f -name "*_peaks.bed" ! -path "./tmp/*" ! -path "./scripts/*" 
for FILE in `find $PROJECT_DIR \( -name "*.java" -o -name "*.kt" -o -name "*.xml" \) -type f -not -path '*/\.git*'`; do
  ((i=i%W)); ((i++==0)) && wait
  (
  jetify $FILE $i&
  )
done
